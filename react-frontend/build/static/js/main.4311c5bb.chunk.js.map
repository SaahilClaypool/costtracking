{"version":3,"sources":["GraphView.js","Util.js","InfoView.js","App.js","serviceWorker.js","index.js"],"names":["MARGIN","isCummulative","usePersonalData","updateGraph","data","d3Node","div","d3","xScale","domain","d","day","range","x","yScale","totalCost","Cost","y","minX","maxX","minY","maxY","rScale","r","colorScale","opacity","Personal","color","Who","content","current","select","points","selectAll","transition","call","console","log","length","exit","duration","attr","remove","enter","append","on","style","html","What","pageX","pageY","cleanData","filteredData","filter","sort","a","b","forEach","i","GraphView","props","useRef","isPersonal","useEffect","HEIGHT","WIDTH","text","initGraph","month","className","id","ref","width","height","currentMonth","formatMoney","val","toFixed","shouldSpend","Message","name","spent","shouldSpent","owes","key","InfoView","costs","reduce","people","owed","msgs","totalSpent","person","shouldHaveSpent","push","monthNames","loadRemoteData","URL","fetch","method","mode","headers","resp","json","body","mockData","Months","Days","things","date","Math","random","what","alist","floor","thing","parseFloat","filterData","parseInt","Date","split","App","React","useState","getMonth","setCurrentMonth","setData","isCum","setIsCum","setRandom","personal","setPersonal","setMonthRelative","offset","fetchData","map","vals","year","dateVal","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4311c5bb.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst MARGIN = { left: 200, right: 20, top: 40, bottom: 100 };\nconst WIDTH = 400;\nconst HEIGHT = 400;\n\nlet isCummulative = true;\nlet usePersonalData = true;\n\n// https://medium.com/@jeffbutsch/using-d3-in-react-with-hooks-4a6c61f1d102\n\nfunction parseDay(datum) {\n    return parseInt(datum.Date.split('/')[1])\n}\n\nfunction updateGraph(data, d3Node) {\n    // TODO: Add total spending if cum\n\n    var div = d3.select(\".tooltip\");\n    let xScale = d3.scaleLinear()\n        .domain(d3.extent(data, d => d.day))\n        .range([0, WIDTH]);\n    let x = d => xScale(d.day)\n\n    let yScale = d3.scaleLinear()\n        .domain(d3.extent(data, d => (isCummulative ? d.totalCost : d.Cost)))\n        .range([HEIGHT, 0]);\n    let y = d => yScale(isCummulative ? d.totalCost : d.Cost)\n\n    let [minX, maxX] = d3.extent(data, d => d.day);\n    let randX = () => xScale(d3.randomUniform(minX - maxX, maxX * 2)())\n    let [minY, maxY] = d3.extent(data, d => d.Cost);\n    let randY = () => yScale(d3.randomUniform(minY - maxY, maxY * 2)())\n\n    let rScale = d3.scaleLinear()\n        .domain(d3.extent(data, d => d.Cost))\n        .range([4.0, 10])\n    let r = (d) => rScale(d.Cost);\n\n    let colorScale = d3.scaleOrdinal(d3.schemeDark2);\n    let opacity = (d) => (d && d.Personal) ? '77' : 'cc';\n    let color = (d) => {\n        if (d.Who === 'Sarah Bottari') {\n            return '#0a304d' + opacity(d);\n        } else if (d.Who === 'Saahil Claypool') {\n            return '#c94818' + opacity(d);\n        } else {\n            return colorScale(d.Who) + opacity(d)\n        }\n    };\n    // temp\n    color('Saahil Claypool')\n    color('Sarah Bottari')\n\n    const svg = d3.select(d3Node.current);\n    const content = svg.select('g');\n    const xAxis = content.selectAll('#xAxis')\n        .transition(500)\n        .call(d3.axisBottom(xScale));\n    const yAxis = content.selectAll('#yAxis')\n        .transition(500)\n        .call(d3.axisLeft(yScale));\n    const points = content.selectAll('circle').data(data);\n\n    console.log(`drawing ${data.length} points`)\n\n    points.exit()\n        .transition()\n        .duration(500)\n        .attr('fill', '#00000000')\n        .remove();\n\n    points.enter()\n        .append('circle')\n        .attr('fill', color)\n        .attr('cx', randX)\n        .attr('cy', randY)\n        .attr('r', 1)\n        .attr('fill', '#000000')\n        .on(\"mouseover\", (d) => {\n            div.transition()\n                .duration(200)\n                .style(\"opacity\", .9);\n            div.html((\n                `\\\n                <strong>${d.Who}</strong><span>${d.Personal ? '  (Personal)' : ''}</span>\\\n                <hr/>\n                <p>${(d.What ? d.What : \"Misc\")}</p>\n                `\n            ))\n                .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                .style(\"top\", (d3.event.pageY - 65) + \"px\");\n        })\n        .on(\"mouseout\", function (d) {\n            div.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        })\n        .transition()\n        .duration(500)\n        .attr('cx', x)\n        .attr('cy', y)\n        .attr('r', r)\n        .attr('fill', color);\n\n    points.transition()\n        .duration(500)\n        .attr('cx', x)\n        .attr('cy', y)\n        .attr('r', r)\n        .attr('fill', color);\n}\n\nfunction initGraph(data, d3Node) {\n    let xScale = d3.scaleLinear()\n        .domain(d3.extent(data, d => d.day))\n        .range([0, WIDTH]);\n    let x = d => xScale(d.day)\n\n    let yScale = d3.scaleLinear()\n        .domain(d3.extent(data, d => d.Cost))\n        .range([0, HEIGHT]);\n    let y = d => yScale(d.Cost)\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0);\n\n    if (data && d3Node.current) {\n        const svg = d3.select(d3Node.current);\n\n        const content = svg\n            .append('g')\n            .attr('transform', `translate(${MARGIN.left}, ${MARGIN.top})`);\n        const points = content\n            .selectAll('circle')\n            .data(data);\n\n        let xAxis = content\n            .append('g')\n            .attr('transform', `translate(0,${HEIGHT + 10})`)\n            .attr('id', 'xAxis')\n            .call(d3.axisBottom(xScale));\n\n        content.append('text')\n            .attr('x', WIDTH / 2)\n            .attr('y', HEIGHT + 50)\n            .style(\"text-anchor\", \"middle\")\n            .text('Day of Month')\n\n        let yAxis = content\n            .append('g')\n            .attr(\"transform\", \"translate(-10,0)\")\n            .attr('id', 'yAxis')\n            .call(d3.axisLeft(yScale));\n\n        content.append(\"text\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", -80)\n            .attr(\"x\", 0 - (HEIGHT / 2))\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Cost (USD)\");\n\n        updateGraph(data, d3Node);\n    }\n}\n\nfunction cleanData(data) {\n    let filteredData = data.filter(d => !d.Personal || usePersonalData)\n    if (isCummulative && filteredData) {\n        filteredData.sort((a, b) => a.day > b.day)\n        let totalCost = {}\n        filteredData\n            .forEach((d, i) => {\n            if (!(d.Who in totalCost)) {\n                totalCost[d.Who] = 0\n            }\n            totalCost[d.Who] += d.Cost\n            d.totalCost = totalCost[d.Who]\n            filteredData[i] = d\n        })\n    }\n    return filteredData;\n}\n\nfunction GraphView(props) {\n\n    let d3Node = useRef(null);\n\n    isCummulative = props.isCummulative;\n    usePersonalData = props.isPersonal;\n\n    useEffect(() => {\n        initGraph(cleanData(props.data, props.month), d3Node)\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps \n    [])\n\n    useEffect(() => {\n        updateGraph(cleanData(props.data, props.month), d3Node)\n    })\n    return <div className=\"GraphView\">\n        <div id=\"D3View\">\n            <svg\n                id=\"d3SVG\" ref={d3Node}\n                width={WIDTH + MARGIN.left + MARGIN.right}\n                height={HEIGHT + MARGIN.bottom + MARGIN.top}\n            />\n        </div>\n        <p>{props.currentMonth}</p>\n    </div >\n}\n\nGraphView.propTypes = {\n    month: PropTypes.number,\n    data: PropTypes.array,\n    isCummulative: PropTypes.bool,\n    isPersonal: PropTypes.bool\n};\n\n\n// D3 functions\n\n\nexport default GraphView;","export function formatMoney(val) {\n    return `$${val.toFixed(2)}`\n}\n\nexport default {formatMoney}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatMoney } from './Util';\n\n\n// TODO make more generic\nfunction owed(data) {\n    let costs = data.reduce((people, d) => {\n        if (!(d.Who in people)) {\n            people[d.Who] = 0.0;\n        }\n        people[d.Who] += d.Cost;\n        return people;\n    }, {});\n    return costs;\n}\n\nconst shouldSpend = {\n    \"Saahil Claypool\": .6,\n    \"Sarah Bottari\": .4\n}\n\nfunction Message(name, spent, shouldSpent, owes) {\n    return (\n        <div className=\"Message\" key={name}>\n            <strong>{name}</strong> has spent {formatMoney(spent)}.\n        <br />\n            {(() => {\n                if (owes > 0) {\n                    return <p>They owe {formatMoney(owes)}</p>\n                } else {\n                    return <span></span>\n                }\n            })()}\n        </div>)\n}\n\nfunction InfoView(props) {\n    \n    let data = props.data.filter(d => !d.Personal); \n    let costs = owed(data);\n    let msgs = [];\n    let totalSpent = 0;\n\n    for (const person in costs) {\n        let spent = costs[person]\n        totalSpent += spent;\n    }\n\n    for (const person in costs) {\n        let spent = costs[person]\n        let shouldHaveSpent = totalSpent * (person in shouldSpend ? shouldSpend[person] : 0.5)\n        let owes = shouldHaveSpent - spent;\n        msgs.push(Message(person, spent, shouldHaveSpent, owes));\n    }\n\n    return (\n        <div className=\"InfoView\">\n            {msgs}\n        </div>\n    );\n}\n\n\nInfoView.propTypes = {\n    data: PropTypes.array,\n}\n\nexport default InfoView;","import React, { useEffect } from 'react';\nimport './App.css';\nimport GraphView from './GraphView';\nimport InfoView from './InfoView';\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n// const URL = (process.env.NODE_ENV === \"development\" ? \"http://127.0.0.1:5000\" : \"https://costsavings.herokuapp.com\")\nconst URL = (process.env.NODE_ENV === \"development\" ? \"https://jierr542m7.execute-api.us-east-2.amazonaws.com/dev/\" : \"https://jierr542m7.execute-api.us-east-2.amazonaws.com/dev/\")\n\nasync function loadRemoteData(URL) {\n\n  // let path = (random ? \"/rand\" : \"/data\");\n  let path = \"\";\n\n  const resp = await fetch(URL + path,\n    {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }\n  );\n  console.log(resp)\n  let body = await resp.json()\n\n  return body;\n}\n\nlet choose = (alist) => alist[Math.floor(Math.random() * alist.length)]\n\nfunction mockData() {\n  let Who = ['Saahil Claypool', 'Sarah Bottari'];\n  let What = ['apples', 'cars', 'phones', 'groceries', 'computers', 'desk', 'chair'];\n  let Cost = [0, 2000];\n  let Months = [1, 12];\n  let Days = [1, 31];\n  let Year = 2020;\n  let things = []\n  for (var month = Months[0]; month < Months[1]; month++) {\n    for (var day = Days[0]; day < Days[1]; day++) {\n      let date = `${month}/${day}/${Year}`\n      Who.forEach(person => {\n        if (Math.random() > 0.5) {\n          let what = choose(What);\n          let isPersonal = Math.random() > 0.5;\n          let thing = {\n            \"Date\": date,\n            \"Cost\": parseFloat((Cost[0] + (Math.random() * (Cost[1] - Cost[0]))).toFixed(2)),\n            \"What\": what,\n            \"Who\": person,\n            \"Personal\": isPersonal,\n            \"Description\": `${person} bought ${what} and it was ${isPersonal ? 'personal' : 'shared'}`,\n          }\n          things.push(thing)\n        }\n      })\n    }\n  };\n  return things;\n}\n\nfunction App() {\n\n  const [currentMonth, setCurrentMonth] = React.useState(new Date().getMonth());\n  const [data, setData] = React.useState([]);\n\n  const [isCum, setIsCum] = React.useState(true);\n  let toggleCummulative = () => setIsCum(!isCum);\n\n  const [random, setRandom] = React.useState(true);\n  let toggleRandom = () => setRandom(!random);\n\n  const [personal, setPersonal] = React.useState(false);\n  let togglePersonal = () => setPersonal(!personal);\n  \n\n  let setMonthRelative = offset => {\n    setCurrentMonth((currentMonth + offset + 12) % 12)\n  }\n\n  let incMonth = () => setMonthRelative(+1);\n  let decMonth = () => setMonthRelative(-1);\n\n  const fetchData = async () => {\n\n    let body = (random ? mockData() : await loadRemoteData(URL));\n    let data = body.map(d => {\n        let vals = d.Date.split('/');\n        return {\n          ...d,\n          month: parseInt(vals[0]),\n          day: parseInt(vals[1]),\n          year: parseInt(vals[2]),\n        }\n      });\n\n    data.sort((a, b) => {\n      let dateVal = a => a.day + a.month * 100 + a.year * 1000\n      return (dateVal(a) - dateVal(b))\n    });\n\n    setData(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  },\n    // eslint-disable-next-line react-hooks/exhaustive-deps \n    [random]);\n\n  return (\n    <div className=\"App\">\n      <h1>Cost Savings</h1>\n      <div className=\"Controls\">\n        <button\n          className=\"ToggleRandom\"\n          onClick={toggleRandom}\n        >\n          random data: {random ? \"True\" : \"False\"}\n        </button>\n        <button\n          className=\"ToggleCummulative\"\n          onClick={toggleCummulative}\n        >\n          {isCum ? \"Cummulative\" : \"Single Purchases\"}\n        </button>\n        <button\n          className=\"TogglePersonal\"\n          onClick={togglePersonal}\n        >\n          personal data: {personal ? \"True\" : \"False\"}\n        </button>\n        <div className=\"Content\">\n          <div className=\"Picker\">\n            <ul className=\"MonthPicker\">\n              <li>\n                <button onClick={decMonth}>\n                  &larr;\n              </button>\n              </li>\n              <li>\n                <button>\n                  &darr;\n              </button>\n              </li>\n              <li>\n                <button onClick={incMonth}>\n                  &rarr;\n              </button>\n              </li>\n            </ul>\n          </div>\n          <h2>{monthNames[currentMonth]}</h2>\n          <GraphView month={currentMonth} data={filterData(data, currentMonth)} isCummulative={isCum} isPersonal={personal}/>\n          <InfoView data={filterData(data, currentMonth)} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction parseMonth(datum) {\n  return parseInt(datum.Date.split('/')[0])\n}\n\nfunction filterData(data, month) {\n  return data.filter(d => parseMonth(d) === month + 1)\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}